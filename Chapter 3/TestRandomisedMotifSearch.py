__author__ = 'steve'
import unittest

import RandomisedMotifSearch as rms


class MyTestCase(unittest.TestCase):
    def test_random_motifs(self):
        dna = "AAAAA CTCGA ATTCC CTCGT TGTGT GTGTA ACGTC AGTCC".split(' ')
        k = 2
        m1 = rms.initialize_random_motifs(dna, k)
        m2 = rms.initialize_random_motifs(dna, k)

        self.assertEqual(m1[0], "AA")
        self.assertNotEqual(m1, m2)

    def test_search(self):
        dna = "GTCGA CCTGA CTGCT ATATA ATATG AATAT ATGTC ATTCC".split(' ')
        k = 3
        t = 5

        result = rms.randomised_motif_search(dna, k, t)
        print(result)

    def test_search_book_small_example(self):
        k = 8
        t = 5
        dna = """CGCCCCTCTCGGGGGTGTTCAGTAAACGGCCA
GGGCGAGGTATGTGTAAGTGCCAAGGTGCCAG
TAGTACCGAGACCGAAAGAAGTATACAGGCGT
TAGATCAAGTTTCAGGTGCACGTCGGTGAACC
AATCCACCAGCTCCACGTGCAATGTTGGCCTA""".split('\n')

        result = rms.rms_multiple(dna, k, t, 1000)

        print(result)


    def test_search_book_large_example(self):
        k = 15
        t = 20
        dna = """TAGCCCAAATTCTGCTCTACTCAATGGCAACCGTTGCGTGCTAGATCTGTACTCTGTTCTGGGACACGCTCAGTGTTCATGTGGATTCACTTCGATGAACTAAGAGTGCGGTGTCAACGAGTGCTCCAATGTATCTGTTCTGTGCCCAGAAACATAGCCCAAATTCTGC
TCTACTCAATGGCAACCGTTGCGTGCTAGATCTGTACTCTGTTCTGGGACACGCTCAGTGTTCATGTGGATCGGTGCGTGGCTATGTCACTTCGATGAACTAAGAGTGCGGTGTCAACGAGTGCTCCAATGTATCTGTTCTGTGCCCAGAAACATAGCCCAAATTCTGC
ACACCGGGCTGTGGCCGAGCACGATCTTTTCGATCGACCCTTTCTCCGCGACCCACGGGCCGGTCATTCCTAAATTGGGAGGCGGCAGCTTCCTCGAAGTCGCCTAACGAGAGGCCCTTGCTTAAGAACACCGCGAATTTTTTTCACAGCGATAGCTGTGGCACTCCGG
CAGAATCGCGAAGGATGGACTAACGAGGACCCGGCTCACGCCGCACTTTCAATCATTCTCTCAGAGGACCCCGGGCTGTGCAGATGCCTCATATGTGTTCTGAGTAATAGTAGACACCGCAAATTCGTCAAACAGAGCTAGGATTCAACGGAGTCTCGACCCTAAACGT
CAATCCGACGTGAAATGAGAGGGGACAATCTGTGGCTATGGTGAGCTCCGGGATGGCGAGAATTGATATGCCGGAGTTATGGGAGGTGGGCCCACGCGGCTACGAGACGATGTATAAGCCTAGTATGCTCCAATGCGAGAGGTCTAAGACTGCTGGTACTGACCGACGT
CGGTTCCTTGGTGCGGCGCGGTCAGGTCTATAGGTGAGCTGTCGGCTTAAACTTAGGGGACCTCTCCCGTATGCTACATTATACCCGGAGTCGTAACAACTTCGGGCGAGGGCTATGCTCATCTGACGGGTGACGCTATTCTGTACCGCTATCTAGGTGCTTTGGATCC
TGTAATGGTCAAATCGTTGGAGGAATGGCAAATTGCGCGTTGCAGCAAAATGATAAAAGATTCGCGGCTCTTGTAGACATACCGGCGTGTAACCGGGTCATGGCTATGATTATTCATCGATTGCCAGCCTTCGACCCGGTCAACGAACGCAGGAGTCGGGGGCACATGT
ACCAGTGCCCGCAATAGAACGTATTATTTGCTCTTCAGGACCGTTATCATTGTACGGCATAATGTCTGTTTAATGATTTAGTACAAACCTTTACCGTTGACCTGGCGGGCTCAAGCTATGATCACCCACGGAAGTATGAGCTGTATTTAGGACTTCGGCGGTAAGGCAC
CATGCTTATTGTATCTGCGTAGTGTGGCTATGTTGCCTGCAAATCCCGAGAGCAATTACTGCGAGCTCTCAAACATGGTCATTAACTTATGTTACATGTATCACCCCGTTCATCAGCGTAGTACGACACAGGAACAACTATCGGAATCTTCAAGATTATGAAAGTTGCT
GTTGATGTAACATTCTACGAAGAGGTCACGCAGCAGTATCACCATAATTTCCCGAATAATATGGCGGACCTGTTAGTGTCTTCTCGGGCTGTAAGTATGAACCCTGAAAATAAGGGACCCGATTTTTGGAACACGCCTCTCTAACGGTTTTCGGCGTGCTATTAACGCT
TTAGCAGGGCGATGGTAGCTTCTGAACGTTTCTTAGTCAGCGCGAATCCCGCCACGGCCGGGTTAATAACCGGCGCAGGCGGAGGGTGGCTATGCGGGTGTAGCCAGGCGGAGTAAAGGAAAATCTGGGTATTGGCGAAGTTTCTAAGGCCTTAGCAGTAAAAATCAGA
GGGGGGGTTTCGGCTGAACATCTCACGTTCTCTAGTATGACGACACATACCATGTTGTTGAAACCTGAAGACTAACATGGGGAGATTACAATTTTTCTGGGCCCGGCCGGGCTCCCGCTATGCGCACCCTGCTACGATCGACCGCGCCACAAGATGCGAATTTGATGGC
GGTTCGCCTTCACGGAGGTTCGACGGTAAACGGTAGTCCAATCTTCACGCTCCACGGGGGGTGCGATCGATTAACAATCGCGGGATAGGTGTAAAGGGCTGTGGCTAGCTCTTCGCCTTTAATATAGATTGAAAAGCCAGTCGGTCTACCCGAACACGCACGTTACGGG
CGAGAAATCAGGTCCATACATGTTTCCGGTGACACGGGATCCCTATCTTCTCCCGATCGGCCCACACAACAAGGGGGCGATTTGCCAAAATGTTAAGCCCCTGCACCTTAAGGTATCTCGCCAGCAAAAAGCTCGGCTGTGGCTATCGACTGGGGTTCTCGAGCCGGCA
ACGAATGCTATACTTAATGCGGGAGTGTCATAAAAGACTGGTTTAAGGATAACAAGGCTTCTGTCGCTGAACTCTGGGGGTCCCAGTCAGAGATATTGGTTATTGAACAGGCTCGGAGTGAGAACGGGAGTTGGCTATGGACGACGCTGGGTCCGCCACAACTGGCCGG
TACGCAGTTTTCACTTTTTCCCAGACGGGCGAGGGCTATGCCCGTCTGCGAGAACAGGCGAAAACCGCACGGAGTTGAGGTGCGTAGCACCTACCATTGTAACTATGATGTTTATATGTAGATGAGGGGCGACGTCTCGTGTAAACATGCGGCAGGCCCGCTGGTCGGT
CCAGGTATCGCTGTGGCTATGGACTGATATATGAAAGACACCCACTGCGCGGCTCCCCTTAGGTCTACCAAAGATCTTTTAGACAGCCCCGAGCCGTACCTATGGAGGGACTCTAAAATCGTCTAGTTACGCATACACGTTATCACCATTATAACTGATGAGTGGCAAG
CACGACCAGACTTTGCTCATTTCTAGCCCAGTCCGGGCTGTGGGGTTGCACGACCTCGTCTGTCTCGTCTACCGTATGTAGAACGAGGTATTTTATTGATGTGAGCAGCAGATAACCACCTGGGACGCCGTACTCTGTGCCAGCCCGCCGTGAGCACATGTATAGAGAT
CTTACCACGTCTTCCTCTTTTCTCGCCTCGCTCACCCTACTGTCTGAAATTCCCGTAGGTGATAGCGGGCTGTGGCTCATGGCGTCGATCGGGTGCACTAATGACTTCGTTGACTGTTAGCCATTAACTGTTGGCAGGCCAGACTTTACGACTATTAAAAGCCTGTCAT
ACCTCTGACGTCGAGTATATTGGACACAAGCAGCGGAAAACATGAAACCAAGTGATCTTCGATTGAACAGATCTCAATCAAAACATTCTCATAACTATCAGCTTGATAACAGACCGACCGGCGTGGAACGCTCCGGGCTGGTTCTATGAACATTACATCGTACCACTGT""".split(
            '\n')

        result = rms.rms_multiple(dna, k, t, 1000)

        print("\n".join(result))


if __name__ == '__main__':
    unittest.main()
